{"version":3,"sources":["webpack:///./src/styles/MenuItemStyles.js","webpack:///./src/utils/calculatePizzaPrice.js","webpack:///./src/utils/formatMoney.js","webpack:///./src/components/PizzaMenu/component.js","webpack:///./src/components/PizzaOrder/component.js","webpack:///./src/utils/calculateOrderTotal.js","webpack:///./src/utils/attachOrderData.js","webpack:///./src/styles/OrderStyles.js","webpack:///./src/pages/order.js","webpack:///./src/utils/useForm.js","webpack:///./src/utils/usePizza.js"],"names":["MenuItemStyles","styled","div","sizes","S","M","L","calculatePizzaPrice","cents","size","formatter","Intl","NumberFormat","style","currency","formatMoney","format","PizzaOrder","pizzas","addToOrder","map","pizza","key","id","fluid","image","asset","alt","name","type","onClick","price","order","removeFromOrder","length","singleOrder","idx","currentPizza","find","className","title","calculateOrderTotal","total","reduce","acc","attachOrderData","item","thumbnail","src","OrderStyled","form","query","OrderPage","useStaticQuery","defaults","useState","values","setValues","e","value","target","parseInt","useForm","email","emailX","updateValue","useContext","OrderContext","setOrder","error","setError","loading","setLoading","message","setMessage","orderedPizza","slice","submitOrder","a","preventDefault","body","process","fetch","method","headers","JSON","stringify","response","text","responseText","parse","console","log","status","usePizza","nodes","SEO","onSubmit","disabled","htmlFor","onChange","color","textAlign"],"mappings":"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","file":"component---src-pages-order-js-7678f25b8460b5a94b1f.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MenuItemStyles = styled.div`\n  display: grid;\n  grid-template-columns: 100px 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: 0 1.3rem;\n  align-content: center;\n  align-items: center;\n  position: relative;\n\n  .gatsby-image-wrapper {\n    grid-row: span 2;\n    height: 100%;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  button {\n    font-size: 1.5rem;\n  }\n\n  button + button {\n    margin-left: 1rem;\n  }\n\n  .remove {\n    background: none;\n    color: var(--red);\n    font-size: 3rem;\n    position: absolute;\n    top: 0;\n    right: 0;\n    box-shadow: none;\n    line-height: 1rem;\n  }\n`;\n","const sizes = {\n  S: 0.75,\n  M: 1,\n  L: 1.25,\n};\n\nexport const calculatePizzaPrice = (cents, size) => cents * sizes[size];\n","const formatter = Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nexport const formatMoney = (cents) => formatter.format(cents / 100);\n","import React from 'react';\nimport Img from 'gatsby-image';\n\nimport { MenuItemStyles } from '../../styles/MenuItemStyles';\n\nimport { calculatePizzaPrice } from '../../utils/calculatePizzaPrice';\nimport { formatMoney } from '../../utils/formatMoney';\n\nconst PizzaOrder = ({ pizzas, addToOrder }) => (\n  <>\n    {pizzas.map((pizza) => (\n      <MenuItemStyles key={pizza.id}>\n        <Img fluid={pizza.image.asset.fluid} alt={pizza.name} />\n        <div>\n          <h2>{pizza.name}</h2>\n        </div>\n        <div>\n          {['S', 'M', 'L'].map((size) => (\n            <button\n              type=\"button\"\n              key={size}\n              onClick={() =>\n                addToOrder({\n                  id: pizza.id,\n                  size,\n                })\n              }\n            >\n              {size} {formatMoney(calculatePizzaPrice(pizza.price, size))}\n            </button>\n          ))}\n        </div>\n      </MenuItemStyles>\n    ))}\n  </>\n);\n\nexport default PizzaOrder;\n","import React from 'react';\nimport Img from 'gatsby-image';\n\nimport { MenuItemStyles } from '../../styles/MenuItemStyles';\n\nimport { calculatePizzaPrice } from '../../utils/calculatePizzaPrice';\nimport { formatMoney } from '../../utils/formatMoney';\n\nconst PizzaOrder = ({ order, pizzas, removeFromOrder }) => (\n  <>\n    <p>You have {order.length} item(s) in your order!</p>\n    {order.map((singleOrder, idx) => {\n      const currentPizza = pizzas.find((pizza) => pizza.id === singleOrder.id);\n      return (\n        <MenuItemStyles key={`${singleOrder.id}-${idx}`}>\n          <Img fluid={currentPizza.image.asset.fluid} />\n          <h2>{currentPizza.name}</h2>\n          <p>\n            Price:{' '}\n            {formatMoney(\n              calculatePizzaPrice(currentPizza.price, singleOrder.size)\n            )}\n          </p>\n          <button\n            type=\"button\"\n            className=\"remove\"\n            title=\"Remove pizza from order\"\n            onClick={() => removeFromOrder(idx)}\n          >\n            &times;\n          </button>\n        </MenuItemStyles>\n      );\n    })}\n  </>\n);\n\nexport default PizzaOrder;\n","import { calculatePizzaPrice } from './calculatePizzaPrice';\nimport { formatMoney } from './formatMoney';\n\nexport const calculateOrderTotal = (order, pizzas) => {\n  const total = order.reduce((acc, singleOrder) => {\n    const currentPizza = pizzas.find((pizza) => pizza.id === singleOrder.id);\n    return acc + calculatePizzaPrice(currentPizza.price, singleOrder.size);\n  }, 0);\n  return formatMoney(total);\n};\n","import { calculatePizzaPrice } from './calculatePizzaPrice';\nimport { formatMoney } from './formatMoney';\n\nexport const attachOrderData = (order, pizzas) =>\n  order.map((item) => {\n    const currentPizza = pizzas.find((pizza) => pizza.id === item.id);\n    return {\n      ...item,\n      name: currentPizza.name,\n      thumbnail: currentPizza.image.asset.fluid.src,\n      price: formatMoney(calculatePizzaPrice(currentPizza.price, item.size)),\n    };\n  });\n","import styled from 'styled-components';\n\nexport const OrderStyled = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n\n  fieldset {\n    grid-column: span 2;\n    max-height: 600px;\n    overflow: auto;\n    display: grid;\n    gap: 1rem;\n    align-content: start;\n    &.menu,\n    &.order {\n      grid-column: span 1;\n    }\n  }\n  .email-x {\n    display: none;\n  }\n\n  @media (max-width: 900px) {\n    fieldset.menu,\n    fieldset.order {\n      grid-column: span 2;\n    }\n  }\n`;\n","/* eslint-disable no-use-before-define */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport SEO from '../components/SEO';\nimport PizzaMenu from '../components/PizzaMenu';\nimport PizzaOrder from '../components/PizzaOrder';\n\nimport { useForm } from '../utils/useForm';\nimport { usePizza } from '../utils/usePizza';\nimport { calculateOrderTotal } from '../utils/calculateOrderTotal';\n\nimport { OrderStyled } from '../styles/OrderStyles';\n\nconst OrderPage = () => {\n  const { pizzas } = useStaticQuery(query);\n\n  const [values, updateValue] = useForm({\n    name: '',\n    email: '',\n    emailX: '',\n  });\n\n  const {\n    order,\n    addToOrder,\n    removeFromOrder,\n    error,\n    loading,\n    message,\n    submitOrder,\n  } = usePizza({ pizzas: pizzas.nodes, values });\n\n  if (message) {\n    return <p>{message}</p>;\n  }\n\n  return (\n    <>\n      <SEO title=\"Order Pizza\" />\n\n      <OrderStyled onSubmit={submitOrder}>\n        <fieldset disabled={loading}>\n          <legend>Your Info</legend>\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            value={values.name}\n            onChange={updateValue}\n          />\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            value={values.email}\n            onChange={updateValue}\n          />\n          {/* Hpot */}\n          <input\n            type=\"email\"\n            name=\"emailX\"\n            className=\"email-x\"\n            value={values.emailX}\n            onChange={updateValue}\n          />\n        </fieldset>\n\n        <fieldset className=\"menu\" disabled={loading}>\n          <legend>Menu</legend>\n          <PizzaMenu pizzas={pizzas.nodes} addToOrder={addToOrder} />\n        </fieldset>\n\n        <fieldset className=\"order\" disabled={loading}>\n          <legend>Order</legend>\n          <PizzaOrder\n            order={order}\n            removeFromOrder={removeFromOrder}\n            pizzas={pizzas.nodes}\n          />\n        </fieldset>\n\n        <fieldset disabled={loading}>\n          <h3>Total is - {calculateOrderTotal(order, pizzas.nodes)}</h3>\n          <div style={{ color: 'red', textAlign: 'center' }}>\n            {error && <p>{error}</p>}\n          </div>\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Placing order ...' : 'Order Ahead!'}\n          </button>\n        </fieldset>\n      </OrderStyled>\n    </>\n  );\n};\n\nexport const query = graphql`\n  query {\n    pizzas: allSanityPizza {\n      nodes {\n        id\n        name\n        price\n        slug {\n          current\n        }\n        toppings {\n          id\n          name\n        }\n        image {\n          asset {\n            fluid(maxWidth: 100) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default OrderPage;\n","import { useState } from 'react';\n\nexport const useForm = (defaults) => {\n  const [values, setValues] = useState(defaults);\n\n  const updateValue = (e) => {\n    let { value } = e.target;\n    if (e.target.type === 'number') {\n      value = parseInt(value, 10);\n    }\n    setValues({\n      ...values,\n      [e.target.name]: value,\n    });\n  };\n\n  return [values, updateValue];\n};\n","import { useState, useContext } from 'react';\n\nimport OrderContext from '../components/OrderCtx';\nimport { calculateOrderTotal } from './calculateOrderTotal';\nimport { attachOrderData } from './attachOrderData';\n\nexport const usePizza = ({ pizzas, values }) => {\n  // 1 get and set order data to Context\n  const { order, setOrder } = useContext(OrderContext);\n\n  // 1.1 Handle state\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // 2. Make a function add things to order\n  const addToOrder = (orderedPizza) => {\n    setOrder([...order, orderedPizza]);\n  };\n\n  // 3. Make a function remove things from order\n  const removeFromOrder = (idx) => {\n    setOrder([...order.slice(0, idx), ...order.slice(idx + 1)]);\n  };\n\n  // 4. Send data the a serverless function when they checkout\n  const submitOrder = async (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n    setError(null);\n    setMessage('');\n\n    try {\n      const body = {\n        order: attachOrderData(order, pizzas),\n        total: calculateOrderTotal(order, pizzas),\n        name: values.name,\n        email: values.email,\n        emailX: values.emailX,\n      };\n\n      // Serverless function uri\n      const uri = `${process.env.GATSBY_SERVERLESS_BASE}/placeOrder`;\n\n      const response = await fetch(uri, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      });\n\n      const responseText = JSON.parse(await response.text());\n      console.log(\n        '🚀 ~ file: usePizza.js ~ line 58 ~ submitOrder ~ responseText',\n        responseText\n      );\n\n      if (response.status >= 400 && response.status < 600) {\n        setLoading(false);\n        setError(responseText.message);\n      } else {\n        setLoading(false);\n        setMessage('Success! Come on down for your pizza!');\n      }\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return {\n    order,\n    addToOrder,\n    removeFromOrder,\n    error,\n    loading,\n    message,\n    submitOrder,\n  };\n};\n"],"sourceRoot":""}