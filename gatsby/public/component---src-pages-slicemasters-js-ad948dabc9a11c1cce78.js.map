{"version":3,"sources":["webpack:///./src/components/SliceMasters/styled.js","webpack:///./src/components/SliceMasters/component.js","webpack:///./src/components/Pagination/styled.js","webpack:///./src/components/Pagination/component.js","webpack:///./src/pages/slicemasters.js"],"names":["SliceMasterStyled","styled","div","SliceMasters","persons","map","person","to","slug","current","className","name","fluid","image","asset","description","PaginationStyled","Pagination","pageSize","totalCount","currentPage","base","skip","totalPages","Math","ceil","prevPage","nextPage","hasPrevPage","hasNextPage","allPages","Array","from","length","disabled","_","idx","pageQuery","SliceMastersPage","data","pageContext","SEO","title","parseInt","process","nodes"],"mappings":"+NAEaA,EAAoBC,IAAOC,IAAV,gFAAGD,CAAH,gaCsBfE,EAlBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oCACE,kBAACJ,EAAD,KACGI,EAAQC,KAAI,SAACC,GAAD,OACX,6BACE,kBAAC,IAAD,CAAMC,GAAE,iBAAmBD,EAAOE,KAAKC,SACrC,4BACE,0BAAMC,UAAU,QAAQJ,EAAOK,QAGnC,kBAAC,IAAD,CAAKC,MAAON,EAAOO,MAAMC,MAAMF,QAC/B,uBAAGF,UAAU,eAAeJ,EAAOS,oBCfhCC,EAAmBf,IAAOC,IAAV,8EAAGD,CAAH,sXCkCdgB,EA/BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,YAAmBC,GAAW,EAAjBC,KAAiB,EAAXD,MACvDE,EAAaC,KAAKC,KAAKN,EAAaD,GAEpCQ,EAAWN,EAAc,EACzBO,EAAWP,EAAc,EAEzBQ,EAAcR,EAAc,EAC5BS,EAAcT,EAAcG,EAE5BO,EAAWC,MAAMC,KAAK,CAAEC,OAAQV,IAEtC,OACE,kBAACP,EAAD,KACE,kBAAC,IAAD,CACET,GAAE,IAAMc,GAAOO,EAAW,IAAOF,EAAa,IAC9CQ,UAAWN,GAFb,UAOCE,EAASzB,KAAI,SAAC8B,EAAGC,GAAJ,OACZ,kBAAC,IAAD,CAAM7B,GAAE,IAAMc,EAAN,KAAce,EAAM,IAAMA,EAAM,MAG1C,kBAAC,IAAD,CAAM7B,GAAE,IAAMc,EAAN,IAAcM,EAAYO,UAAWL,GAA7C,YCJOQ,EAAS,aAwBPC,UA1CU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACxBpB,EAAsBoB,EAAtBpB,YAAaE,EAASkB,EAATlB,KACrB,OACE,oCACE,kBAACmB,EAAA,EAAD,CAAKC,MAAK,wBAAyBtB,GAAe,KAElD,kBAAC,EAAD,CACED,WAAYoB,EAAKnC,QAAQe,WACzBD,SAAUyB,SAASC,KACnBxB,YAAaA,GAAe,EAC5BE,KAAMA,EACND,KAAK,iBAEP,kBAAC,EAAD,CAAcjB,QAASmC,EAAKnC,QAAQyC","file":"component---src-pages-slicemasters-js-ad948dabc9a11c1cce78.js","sourcesContent":["import styled from 'styled-components';\n\nexport const SliceMasterStyled = styled.div`\n  display: grid;\n  grid-gap: 2rem;\n  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n\n  a {\n    text-decoration: none;\n  }\n\n  .gatsby-image-wrapper {\n    height: 400px;\n  }\n\n  h2 {\n    transform: rotate(-2deg);\n    text-align: center;\n    font-size: 4rem;\n    margin-bottom: -2rem;\n    position: relative;\n    z-index: 2;\n  }\n\n  .description {\n    background-color: var(--yellow);\n    padding: 1rem;\n    margin: 2rem;\n    margin-top: -6rem;\n    z-index: 2;\n    position: relative;\n    transform: rotate(1deg);\n    text-align: center;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport { SliceMasterStyled } from './styled';\n\nconst SliceMasters = ({ persons }) => (\n  <>\n    <SliceMasterStyled>\n      {persons.map((person) => (\n        <div>\n          <Link to={`/slicemasters/${person.slug.current}`}>\n            <h2>\n              <span className=\"mark\">{person.name}</span>\n            </h2>\n          </Link>\n          <Img fluid={person.image.asset.fluid} />\n          <p className=\"description\">{person.description}</p>\n        </div>\n      ))}\n    </SliceMasterStyled>\n  </>\n);\n\nexport default SliceMasters;\n","import styled from 'styled-components';\n\nexport const PaginationStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  border: 1px solid var(--grey);\n  border-radius: 5px;\n  text-align: center;\n\n  & > * {\n    padding: 1rem;\n    margin: 0;\n    flex: 1;\n    border-right: 1px solid var(--grey);\n    text-decoration: none;\n\n    &[aria-current],\n    .current {\n      color: var(--red);\n    }\n    &[disabled] {\n      pointer-events: none;\n      color: var(--grey);\n    }\n  }\n  & > *:not(last-child) {\n    border-right: none;\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { PaginationStyled } from './styled';\n\nconst Pagination = ({ pageSize, totalCount, currentPage, skip, base }) => {\n  const totalPages = Math.ceil(totalCount / pageSize);\n\n  const prevPage = currentPage - 1;\n  const nextPage = currentPage + 1;\n\n  const hasPrevPage = currentPage > 1;\n  const hasNextPage = currentPage < totalPages;\n\n  const allPages = Array.from({ length: totalPages });\n\n  return (\n    <PaginationStyled>\n      <Link\n        to={`/${base}${hasPrevPage ? `/${prevPage}` : ''}`}\n        disabled={!hasPrevPage}\n      >\n        &#8592; Prev\n      </Link>\n\n      {allPages.map((_, idx) => (\n        <Link to={`/${base}/${idx + 1}`}>{idx + 1}</Link>\n      ))}\n\n      <Link to={`/${base}/${nextPage}`} disabled={!hasNextPage}>\n        Next &#8594;\n      </Link>\n    </PaginationStyled>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { graphql } from 'gatsby';\n\nimport SEO from '../components/SEO';\nimport SliceMasters from '../components/SliceMasters';\nimport Pagination from '../components/Pagination';\n\nconst SliceMastersPage = ({ data, pageContext }) => {\n  const { currentPage, skip } = pageContext;\n  return (\n    <>\n      <SEO title={`Slicemasters - Page ${currentPage || 1}`} />\n\n      <Pagination\n        totalCount={data.persons.totalCount}\n        pageSize={parseInt(process.env.GATSBY_PAGE_SIZE)}\n        currentPage={currentPage || 0}\n        skip={skip}\n        base=\"slicemasters\"\n      />\n      <SliceMasters persons={data.persons.nodes} />\n    </>\n  );\n};\n\nexport const pageQuery = graphql`\n  query Persons($skip: Int, $pageSize: Int) {\n    persons: allSanityPerson(limit: $pageSize, skip: $skip) {\n      totalCount\n\n      nodes {\n        id\n        name\n        description\n        slug {\n          current\n        }\n        image {\n          asset {\n            fluid(maxWidth: 410) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default SliceMastersPage;\n"],"sourceRoot":""}